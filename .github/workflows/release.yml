name: Build and Upload

on:
  workflow_dispatch: null

env:
  SCCACHE_GHA_ENABLED: "true"
  CC: "clang"
  CXX: "clang++"

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # macOS arm64
            cmake-args: ""
            archive: loud-darwin-arm64.tar.gz

          - platform: "macos-13" # macOS x86-64
            cmake-args: ""
            archive: loud-darwin-x86-64.tar.gz

          - platform: "ubuntu-22.04" # Linux x86-64
            cmake-args: ""
            archive: loud-linux-x86-64.tar.gz
          - platform: "windows-latest" # Windows x86_64
            cmake-args: "-DGGML_VULKAN=ON"
            archive: loud-windows-x86-64.zip
          - platform: "windows-latest" # Windows x86_64 static
            cmake-args: "-DGGML_VULKAN=ON -DSHERPA_STATIC=ON"
            archive: loud-windows-x86-64-static.zip
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Used for getting git tag
          fetch-depth: 0

      # 安装 LLVM/Clang 19
      - name: Install LLVM 19
        uses: llvm/llvm-installer@v1.0.0
        with:
          version: "19"  # 指定安装 Clang 19.x 最新版
        if: (!contains(matrix.platform, 'windows'))

      # 验证 Clang 版本
      - name: Check Clang version
        run: clang --version

      # 添加 Clang 到 PATH
      - name: Set Clang to PATH
        run: |
          echo "C:\Program Files\LLVM\bin" >> $env:GITHUB_PATH
        if: (!contains(matrix.platform, 'windows'))

      - name: Prepare ninja (Unix)
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install ninja
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt install ninja-build
          fi
        if: (!contains(matrix.platform, 'windows'))

      - name: Prepare ninja (Windows)
        run: |
          C:\msys64\usr\bin\wget https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-win.zip
          7z x ninja-win.zip
          echo "$PWD" >> $env:GITHUB_PATH
        if: contains(matrix.platform, 'windows')

      - name: Prepare Vulkan SDK (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan1
        if: contains(matrix.platform, 'ubuntu')

      - name: Prepare Vulkan SDK (Windows)
        run: |
          C:\msys64\usr\bin\wget https://sdk.lunarg.com/sdk/download/1.3.296.0/windows/VulkanSDK-1.3.296.0-Installer.exe
          7z x VulkanSDK-1.3.296.0-Installer.exe -ovulkan-sdk
          echo "VULKAN_SDK=$PWD/vulkan-sdk" >> $env:GITHUB_ENV
          echo "$PWD/vulkan-sdk/Bin" >> $env:GITHUB_PATH
        if: contains(matrix.platform, 'windows')

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6

      - name: Cache Cmake
        id: cache-cmake
        uses: actions/cache@v4
        with:
          path: .cache
          key: ${{ matrix.platform }}-cmake-${{ matrix.archive }}

      - name: Build with CMake and Ninja
        run: |
          cmake -G Ninja -B build . -DCMAKE_BUILD_TYPE=Release -DTAG="$(git describe --tags --abbrev=0)" -DREV="$(git rev-parse --short HEAD)" ${{ matrix.cmake-args }}
          cmake --build build --config Release

      - name: Upload package (Unix)
        run: |
          chmod +x ./build/bin/*
          if [[ "$(uname)" == "Darwin" ]]; then
            codesign -f -s "-" ./build/bin/*
          fi
          mv build/bin build/loud
          # Add test.wav
          wget https://github.com/thewh1teagle/loud.cpp/releases/download/v0.1.0/test.wav -O build/loud/test.wav
          tar -czf build/${{ matrix.archive }} -C build loud
          gh release upload `git describe --tags --abbrev=0` build/${{ matrix.archive }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}
        if: (!contains(matrix.platform, 'windows'))

      - name: Upload package (Windows)
        run: |
          Move-Item build/bin loud
          C:\msys64\usr\bin\wget https://github.com/thewh1teagle/loud.cpp/releases/download/v0.1.0/test.wav -O loud/test.wav
          7z a build\${{ matrix.archive }} loud
          gh release upload $(git describe --tags --abbrev=0) build/${{ matrix.archive }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}
        if: contains(matrix.platform, 'windows')
